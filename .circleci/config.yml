version: 2.1

workflows:
  shop-backend:
    jobs:
      - build:
          context: aws-shop

jobs:
  build:
    docker:
      - image: circleci/node
    steps:
      - checkout

      # Set working directory
      - run:
          name: Sit on server package subfolder
          command: cd packages/server

      # Download and cache dependencies
      - restore_cache:
        keys:
          - dependencies-cache-{{ checksum "package.json" }}
          - dependencies-cache

      # Add environment variables
      - run:
          name: Add environment variables
          command: |
            echo ACCESS_TOKEN_SECRET=$ACCESS_TOKEN_SECRET >> .env
            echo GOOGLE_CLIENT_IT=$GOOGLE_CLIENT_IT >> .env
            echo GOOGLE_CLIENT_SECRET=$GOOGLE_CLIENT_SECRET >> .env
            echo GOOGLE_REDIRECT_URI=$GOOGLE_REDIRECT_URI >> .env
            echo GOOGLE_REFRESH_TOKEN=$GOOGLE_REFRESH_TOKEN >> .env
            echo MEDIA_AWS_ACCESS_KEY_ID=$MEDIA_AWS_ACCESS_KEY_ID >> .env
            echo MEDIA_AWS_SECRET_ACCESS_KEY=$MEDIA_AWS_SECRET_ACCESS_KEY >> .env
            echo MONGODB_PASSWORD=$MONGODB_PASSWORD >> .env
            echo MONGODB_USR=$MONGODB_USR >> .env
            echo NODE_ENV=$NODE_ENV >> .env
            echo REFRESH_TOKEN_SECRET=$REFRESH_TOKEN_SECRET >> .env

      # Instal dependencies
      - run:
          name: Install dependencies
          command: npm install

      # Run tests
      - run:
          name: Run tests
          command: npm run test

      # Deploy
      - run:
          name: Deploy AWS lambda
          command: |
            sudo npm i -g serverless
            sls config credentials --provider aws --key $AWS_ACCESS_KEY_ID --secret $AWS_SECRET_ACCESS_KEY
            sls deploy -v

      # Save cache
      - save_cache:
          paths:
            - node_modules
          key: dependencies-cache-{{ checksum "package.json" }}
